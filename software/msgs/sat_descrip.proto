// Protobuf V3 description file
// Compile using: protoc --python_out=./ ./sat_descrip.proto

syntax = "proto3";

import "google/protobuf/timestamp.proto";

package LEOHack;

// =============== INFO MESSAGES ===============
// Location + orientation
// Used for:
// - Absolute pose of team satalite to base station
// - Absolute pose of dead satalite to base station
// - Relative pose of team satalite to dead satalite
message Pose2D {
    float x = 1; // in meters
    float y = 2; // in meters
    float theta = 3; // in rads
}

// 2D Twist, translatonal + rotational velocity
message Twist2D {
    float v_x = 1; // in m/s
    float v_y = 2; // in m/s
    float omega = 3; // in rad/s
}

// 2D Wrench, force + torque
message Wrench2D {
    float f_x = 1; // in N
    float f_y = 2; // in N
    float tau = 3; // in Nm
}

// Team info
// Team name can be whatever a team decides
// Team ID must be the unique ID provided by the competition
message TeamInfo {
    string teamName = 1;
    uint32 teamID = 2;
}

// Satalite description
// Sent during first connect and handshakes with satalite and team code
// Defines name, team ID, thruster config, mass and inertia
// !! MAKE SURE YOUR TEAM ID IS SET IN CODE, OTHERWISE SCORES WILL NOT BE COUNTED CORRECTLY !!
message SatelliteDescription {
    // ID properties
    // !! TO BE SET BY TEAM !!
    TeamInfo teamInfo = 1;

    // Physical properties
    // will come pre-filled
    float mass = 2;
    float inertia = 3;

    // Connection properties
    // will be pre-filled 
    string ipAddress = 5;
}

// =============== STATE MESSAGES ===============
// Satalite state
// Contains feedback about current
message SataliteState {
    uint32 teamID = 1;
    bool active = 2;

    // Satalite location
    Pose2D pose = 3;

    // Satalite velocity
    Twist2D twist = 4;

    // Used fuel
    float fuel = 5;
}

message SystemState {
    enum State {
        INIT = 0;
        RUN = 1;
        RESET = 2;
        ABORT = 3;
    }

    State state = 1;

    // https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/timestamp
    google.protobuf.Timestamp elapsedTime = 2;
    google.protobuf.Timestamp absoluteTime = 3;
}

// =============== SATTALITE COMMANDS ===============

// For sending override commands to the satalite
// TODO: How much of this do we put on the team GUI
message Command {
    enum CmdType {
        INIT = 0; // Inits the team code
        START = 1; // Starts the team code
        PAUSE = 2; // Pauses team update loop
        ABORT = 3; // Stops team code and kills motors
        RESET = 4; // Resets all team specific paremeters
        REBOOT = 5; // Reboots pi? not sure how drastic I need this
    }

    CmdType commandType = 1;
}

// Thrust command
message ThrustCommand {
    Wrench2D thrust = 1;
}

// Reply if command was sucessfully executed
message CommandReply {
    bool success = 1;
}